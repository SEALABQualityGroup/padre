-- MySQL dump 10.13  Distrib 5.7.21, for Linux (x86_64)
--
-- Host: localhost    Database: local_visual_builder
-- ------------------------------------------------------
-- Server version	5.7.21-0ubuntu0.17.10.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `context`
--

DROP TABLE IF EXISTS `context`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `context` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name_UNIQUE` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=150 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `context`
--

LOCK TABLES `context` WRITE;
/*!40000 ALTER TABLE `context` DISABLE KEYS */;
INSERT INTO `context` VALUES (141,'Classifier'),(129,'Component'),(123,'Message'),(149,'Node'),(125,'Operation');
/*!40000 ALTER TABLE `context` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `do`
--

DROP TABLE IF EXISTS `do`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `do` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=108 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `do`
--

LOCK TABLES `do` WRITE;
/*!40000 ALTER TABLE `do` DISABLE KEYS */;
INSERT INTO `do` VALUES (67,'F_probExec'),(68,'F_probExec'),(69,'F_probExec4EP'),(70,'F_probExec'),(71,'F_numClientConnects'),(72,'F_numMsgsIn'),(73,'F_numMsgsOut'),(74,'F_numSupplierConnects'),(75,'F_numRemMsgs'),(76,'F_numRemMsgs'),(77,'F_numRemInst'),(78,'F_numRemInst'),(79,'F_numExF'),(80,'F_resDemandDiskGreaterOrEqualThan'),(81,'F_resDemandCpuGreaterOrEqualThan'),(82,'F_resDemandGreaterOrEqualThan'),(83,'F_resDemandCpuGreaterOrEqualThan'),(84,'F_resDemandDiskGreaterOrEqualThan'),(85,'F_resDemandCpuLesserThan'),(86,'F_resDemandDiskLesserThan'),(87,'F_resDemandLesserThan'),(88,'F_resDemand'),(89,'F_resDemand'),(90,'F_resDemand'),(91,'F_T'),(92,'F_T'),(93,'F_T'),(94,'F_T'),(95,'F_maxHwUtil'),(96,'F_maxHwUtil'),(97,'F_maxHwUtil'),(98,'F_maxHwUtil'),(99,'F_maxCpuUtil'),(100,'F_maxDiskUtil'),(101,'F_maxHwUtil'),(102,'F_maxQL'),(103,'F_maxNetUtil'),(104,'F_maxNetUtil'),(105,'F_minNetUtil'),(106,'F_RT'),(107,'F_RT');
/*!40000 ALTER TABLE `do` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `do_context`
--

DROP TABLE IF EXISTS `do_context`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `do_context` (
  `do_id` int(11) NOT NULL,
  `context_id` int(11) NOT NULL,
  `method` varchar(5000) DEFAULT NULL,
  PRIMARY KEY (`do_id`,`context_id`),
  KEY `context_id` (`context_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `do_context`
--

LOCK TABLES `do_context` WRITE;
/*!40000 ALTER TABLE `do_context` DISABLE KEYS */;
INSERT INTO `do_context` VALUES (67,123,'\noperation Message F_probExec() : Boolean\n{\n\n	if( self.getMessageKind().asString() <> \"found\" )\n	{\n		var intOperand = self.getSendEvent().getOwner();\n\n		if( not self.hasStereotype(\"GaStep\") and not self.hasStereotype(\"GaAcqStep\") )\n			return false;\n\n		if( intOperand.isUndefined() or (intOperand.isDefined() and not intOperand.isTypeOf(InteractionOperand)) )\n		{\n			return true;\n		}\n		else\n		{\n\n			if( intOperand.hasStereotype(\"GaStep\") )\n			{\n\n				if( intOperand.getValue(intOperand.getStereotype(\"GaStep\"), \"prob\").isDefined() and intOperand.getValue().asReal == 1.0 )\n				{\n					return true;\n				}\n			}\n		}\n	}\n	return false;\n}'),(68,125,'\noperation Operation F_probExec() : Boolean\n{\n	var listOfMes = self.getAllOwnMessages();\n	var listOfIntOperands = self.getOwnerInteractionOperands();\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n\n	if( listOfMes.isEmpty() )\n	{\n		return false;\n	}\n\n	if( listOfIntOperands.isEmpty() )\n	{\n		return true;\n	}\n\n	for(int in listOfIntOperands)\n	{\n\n		if( int.hasStereotype(\"GaStep\") and (int.getValue(int.getStereotype(\"GaStep\"), \"prob\").asReal() == 1) )\n		{\n			return true;\n		}\n	}\n	return false;\n}'),(69,125,'\noperation Operation F_probExec4EP() : Boolean\n{\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n	var listOfMes = self.getAllOwnMessages();\n\n	if( listOfMes.isEmpty() )\n		return false;\n\n	if( self.retrieveOperation().isDefined() )\n	{\n		return true;\n	}\n	else\n	{\n		return false;\n	}\n}'),(70,129,'\noperation Component F_probExec() : Boolean\n{\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxResDemand());\n\n	if( opGreater.isUndefined() or opGreater.isEmpty() )\n	{\n		return false;\n	}\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand());\n\n	for(opG in opGreater)\n	{\n		var opGInteractionOperands = opG.getOwnerInteractionOperands();\n\n		for(opL in opLesser)\n		{\n\n			for(opLInteractionOperand in opL.getOwnerInteractionOperands())\n			{\n\n				for(opGInteractionOperand in opGInteractionOperands)\n				{\n					var opGInteractionOperandStereotype = opGInteractionOperand.getStereotype(\"GaStep\");\n					var opLInteractionOperandStereotype = opLInteractionOperand.getStereotype(\"GaStep\");\n\n					if( opGInteractionOperandStereotype.isDefined() and opLInteractionOperandStereotype.isDefined() )\n					{\n\n						if( (opGInteractionOperand.getValue(opGInteractionOperandStereotype, \"prob\").asReal()+opLInteractionOperand.getValue(opLInteractionOperandStereotype, \"prob\").asReal()) == 1 )\n							return true;\n					}\n				}\n			}\n		}\n	}\n	return false;\n}'),(71,129,'\noperation Component F_numClientConnects(th_numClientConnects : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"number of Client Connects of [\"+self.getName()+\"] --> \"+self.getRequireds().size()).println();\n	}\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n		return false;\n\n	if( self.getRequireds().size().asReal() >= th_numClientConnects )\n	{\n		return true;\n	}\n	return false;\n}'),(72,129,'\noperation Component F_numMsgsIn(th_numReceivedMsgs : List(Real)) : Boolean\n{\n\n	if( debug() )\n	{\n		\"######### DEBUG ##########\".println();\n		self.println();\n		(\"getCriticalLifeline4BlobContainerAP --> \"+self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs)).println();\n		\"######### DEBUG ##########\".println();\n	}\n\n	if( self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs).isDefined() and not self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs).isEmpty() )\n		return true;\n	return false;\n}'),(73,129,'\noperation Component F_numMsgsOut(th_numSentMsgs : List(Real)) : Boolean\n{\n\n	if( debug() )\n	{\n		\"######### DEBUG ##########\".println();\n		self.println();\n		(\"getCriticalLifeline4BlobControllerAP --> \"+self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).size()).println();\n		\"######### DEBUG ##########\".println();\n	}\n\n	if( self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).isDefined() and not self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).isEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(74,129,'\noperation Component F_numSupplierConnects(th_numSupplierConnects : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"number of Supplier Connects of [\"+self.getName()+\"] --> \"+self.getProvideds().size()).println();\n	}\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n	{\n		return false;\n	}\n\n	if( self.getProvideds().size().asReal() >= th_numSupplierConnects )\n	{\n		return true;\n	}\n	return false;\n}'),(75,129,'\noperation Component F_numRemMsgs(th_maxRemMsgs : Real) : Boolean\n{\n\n	if( self.countRemoteMessages(th_maxRemMsgs) )\n	{\n		return true;\n	}\n	return false;\n}'),(76,141,'\noperation Classifier F_numRemMsgs(th_maxRemMsgs : Integer) : Boolean\n{\n\n	if( self.countRemoteMessages(th_maxRemMsgs) )\n		return true;\n	return false;\n}'),(77,129,'\noperation Component F_numRemInst(th_maxRemInst : Integer) : Boolean\n{\n\n	if( self.countRemoteInstances(th_maxRemInst) )\n		return true;\n	return false;\n}'),(78,141,'\noperation Classifier F_numRemInst(th_maxRemInst : Integer) : Boolean\n{\n\n	if( self.countRemoteInstances(th_maxRemInst) )\n		return true;\n	return false;\n}'),(79,129,'\noperation Component F_numExF(th_maxExF : Integer) : Boolean\n{\n\n	if( self.hasStereotype(\"PaRunTInstance\") and not self.getUsedFormat().isEmpty() )\n	{\n\n		for(int in self.getUsedFormat().keySet())\n		{\n\n			if( self.getUsedFormat().get(int).keySet().size() >= th_maxExF )\n			{\n				return true;\n			}\n		}\n	}\n	return false;\n}'),(80,149,'\noperation Node F_resDemandDiskGreaterOrEqualThan(th_maxResDemandDisk : Real) : Boolean\n{\n	var turnback : Boolean = false;\n	var criticOperation = self.getDiskCriticOperation();\n\n	if( criticOperation.isUndefined() or criticOperation.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Context: Node, Method: F_resDemandDiskGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n\n	if( not criticOperation.hasStereotype(\"GaStep\") )\n	{\n		(\"the opearion [\"+self.getName()+\"] is not correctly stereotyped\").println();\n		showError(\"Method: F_resDemandDiskGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n	var servCount = criticOperation.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	if( servCount->second().asReal() >= th_maxResDemandDisk )\n	{\n		return true;\n	}\n	return false;\n}'),(81,149,'\noperation Node F_resDemandCpuGreaterOrEqualThan(th_maxResDemandCpu : Real) : Boolean\n{\n	var turnback : Boolean = false;\n	var criticOperation = self.getCpuCriticOperation();\n\n	if( debug() )\n	{\n		(\"criticOperation of [\"+self.getName()+\"]\").println();\n		(\"criticOperation --> \"+criticOperation).println();\n	}\n\n	if( criticOperation.isUndefined() or criticOperation.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Context: Node, Method: F_resDemandCpuGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n\n	if( not criticOperation.hasStereotype(\"GaStep\") )\n	{\n		showError(\"the opearion [\"+self.getName()+\"] is not correctly stereotyped\");\n		showError(\"Method: F_resDemandCpuGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n	var servCount = criticOperation.getTag(\"GaStep\", \"servCount\");\n\n	if( debug() )\n	{\n		(\"servCount of [\"+self.getName()+\"] --> \"+servCount).println();\n		(\"th_maxResDemandCpu --> \"+th_maxResDemandCpu).println();\n	}\n\n	if( servCount->first().asReal() >= th_maxResDemandCpu )\n	{\n		return true;\n	}\n	return turnback;\n}'),(82,125,'\noperation Operation F_resDemandGreaterOrEqualThan(th_maxResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var appliedStereotypes = self.getAppliedStereotypes();\n	var gaStep = self.getStereotype(\"GaStep\");\n	var servCount = self.getValue(gaStep, \"servCount\");\n	var i : Integer = 0;\n\n	for(demand in servCount)\n	{\n\n		if( demand.asReal() >= th_maxResDemand.at(i).asReal() )\n		{\n			turnback = true;\n			break;\n		}\n		i = i+1;\n	}\n	return turnback;\n}'),(83,125,'\noperation Operation F_resDemandCpuGreaterOrEqualThan(th_maxCpuResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->first().asReal() >= th_maxCpuResDemand )\n	{\n\n		if( debug() )\n		{\n			(\"servCount of [\"+self.getName()+\"] -->\"+servCount).println();\n			(\"th_maxCpuResDemand -->\"+th_maxCpuResDemand).println();\n		}\n		return true;\n	}\n	return false;\n}'),(84,125,'\noperation Operation F_resDemandDiskGreaterOrEqualThan(th_maxDiskResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->second().asReal() >= th_maxDiskResDemand )\n	{\n		return true;\n	}\n	return false;\n}'),(85,125,'\noperation Operation F_resDemandCpuLesserThan(th_minResDemandCpu : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the operation is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->first().asReal() < th_minResDemandCpu )\n	{\n		return true;\n	}\n	return false;\n}'),(86,125,'\noperation Operation F_resDemandDiskLesserThan(th_minResDemandDisk : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the operation is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->second().asReal() < th_minResDemandDisk )\n	{\n		return true;\n	}\n	return false;\n}'),(87,125,'\noperation Operation F_resDemandLesserThan(th_minResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the element is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	for(demand in servCount)\n	{\n\n		if( demand.asReal() < th_minResDemand.at(i) )\n		{\n			turnback = true;\n			break;\n		}\n		i = i+1;\n	}\n	return turnback;\n}'),(88,125,'\noperation Operation F_resDemand(th_maxResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	if( servCount.isDefined() and servCount.size() == 0 )\n	{\n		turnback = false;\n	}\n	else\n	{\n\n		for(demand in servCount)\n		{\n\n			if( demand.asReal() >= th_maxResDemand.at(i) )\n			{\n				turnback = true;\n				break;\n			}\n			i = i+1;\n		}\n	}\n	return turnback;\n}'),(89,123,'\noperation Message F_resDemand(th_maxResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.hasStereotype(\"GaStep\") )\n	{\n		var gaStep = self.getStereotype(\"GaStep\");\n		var servCount = self.getValue(gaStep, \"servCount\");\n\n		for(demand in servCount)\n		{\n\n			if( demand.asReal() < th_maxResDemand.at(i) )\n			{\n				turnback = false;\n				break;\n			}\n			i = i+1;\n		}\n	}\n	return turnback;\n}'),(90,129,'\noperation Component F_resDemand(th_maxOpResDemand : List(Real), th_minResDemand : List(Real)) : Boolean\n{\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n		return false;\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxOpResDemand);\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand);\n\n	if( opGreater.notEmpty() and opLesser.notEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(91,125,'\noperation Operation F_T(th_SthReq : Real) : Boolean\n{\n	var listOfUseCases : List(UseCase) = self.getUseCases();\n	var listOfUseCaseWithThroughputLessThanThreshold : List(UseCase) = new List(UseCase);\n\n	if( listOfUseCases.isEmpty() )\n	{\n		return false;\n	}\n\n	for(useCase in listOfUseCases)\n	{\n\n		if( useCase.hasStereotype(\"GaScenario\") )\n		{\n			var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n			if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n			{\n				listOfUseCaseWithThroughputLessThanThreshold.add(useCase);\n			}\n		}\n	}\n	return listOfUseCaseWithThroughputLessThanThreshold.notEmpty();\n}'),(92,123,'\noperation Message F_T() : Boolean\n{\n	var th_SthReq = 0.9;\n	var useCase : UseCase = self.getUseCase();\n\n	if( useCase.hasStereotype(\"GaScenario\") )\n	{\n		var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n		if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n		{\n			return true;\n		}\n	}\n	return false;\n}'),(93,123,'\noperation Message F_T() : Real\n{\n	var th_SthReq = 0.9;\n	var useCase : UseCase = self.getUseCase();\n\n	if( useCase.hasStereotype(\"GaScenario\") )\n	{\n		var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n		if( throughput.isDefined() )\n		{\n			return throughput.asReal();\n		}\n	}\n	return 0;\n}'),(94,125,'\noperation Operation F_T() : Boolean\n{\n	var th_SthReq = 0.9;\n	var listOfUseCases : List(UseCase) = self.getUseCases();\n	var listOfUseCaseWithThroughputLessThanThreshold : List(UseCase) = new List(UseCase);\n\n	for(useCase in listOfUseCases)\n	{\n\n		if( useCase.hasStereotype(\"GaScenario\") )\n		{\n			var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n			if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n			{\n				listOfUseCaseWithThroughputLessThanThreshold.add(useCase);\n			}\n		}\n	}\n	return listOfUseCaseWithThroughputLessThanThreshold.isEmpty();\n}'),(95,123,'\noperation Message F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	return self.getSignature().F_maxHwUtil(th_maxHwUtil);\n}'),(96,125,'\noperation Operation F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	var listOfProcessNode : List(Node) = new List(Node);\n	listOfProcessNode = self.getProcessNodes();\n\n	if( listOfProcessNode.isEmpty() )\n	{\n		return false;\n	}\n	var listOfProcessNodeWithUtilizationGreater : List(Node) = new List(Node);\n\n	for(node in listOfProcessNode)\n	{\n\n		if( node.hasStereotype(\"GaExecHost\") )\n		{\n			var utilization = node.getValue(node.getStereotype(\"GaExecHost\"), \"utilization\")->first();\n\n			if( utilization.isDefined() and utilization.asReal() >= th_maxHwUtil )\n			{\n				listOfProcessNodeWithUtilizationGreater.add(node);\n			}\n		}\n	}\n	return listOfProcessNodeWithUtilizationGreater.notEmpty();\n}'),(97,125,'\noperation Operation F_maxHwUtil() : Boolean\n{\n	var th_maxHwUtil : Real = 0.85;\n	var listOfProcessNode : List(Node) = new List(Node);\n	listOfProcessNode = self.getProcessNodes();\n	var listOfProcessNodeWithUtilizationGreater : List(Node) = new List(Node);\n\n	for(node in listOfProcessNode)\n	{\n\n		if( node.hasStereotype(\"GaExecHost\") )\n		{\n			var utilization = node.getValue(node.getStereotype(\"GaExecHost\"), \"utilization\")->first();\n\n			if( utilization.isDefined() and utilization.asReal() >= th_maxHwUtil )\n			{\n				listOfProcessNodeWithUtilizationGreater.add(node);\n			}\n		}\n	}\n	return listOfProcessNodeWithUtilizationGreater.isEmpty();\n}'),(98,149,'\noperation Node F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	var utilization = self.getUtilization();\n\n	if( utilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( utilization.asReal() >= th_maxHwUtil )\n		{\n\n			if( self.getNeighboursWithLowUtilization().isUndefined() or self.getNeighboursWithLowUtilization().isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(99,149,'\noperation Node F_maxCpuUtil(th_maxCpuUtil : Real) : Boolean\n{\n	var maxCpuUtilization = self.getMaxCpuUtilization();\n\n	if( maxCpuUtilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( maxCpuUtilization.asReal() >= th_maxCpuUtil )\n		{\n\n			if( debug() )\n			{\n				(\"self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined() --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined()).println();\n				(\"self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty() --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty()).println();\n				(\"self.getNeighboursWithLowCpuUtilization --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third())).println();\n			}\n\n			if( self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined() and self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(100,149,'\noperation Node F_maxDiskUtil(th_maxDiskUtil : Real) : Boolean\n{\n	var maxDiskUtilization = self.getMaxDiskUtilization();\n\n	if( maxDiskUtilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( maxDiskUtilization.asReal() >= th_maxDiskUtil )\n		{\n\n			if( self.getNeighboursWithLowDiskUtilization(th_maxHwUtil()->at(4)).isUndefined() or self.getNeighboursWithLowDiskUtilization(th_maxHwUtil()->at(4)).isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(101,129,'\noperation Component F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"getNodesWithUtilizationGreaterThan(th_maxHwUtil) [\"+self.getName()+\"] --> \"+self.getNodesWithUtilizationGreaterThan(th_maxHwUtil).size()).println();\n	}\n\n	if( self.getNodesWithUtilizationGreaterThan(th_maxHwUtil).notEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(102,149,'\noperation Node F_maxQL(th_maxQL : Real) : Boolean\n{\n\n	if( self.hasStereotype(\"RtUnit\") and self.getTag(\"RtUnit\", \"queueSize\").isDefined() and self.getTag(\"RtUnit\", \"queueSize\").asReal() > th_maxQL )\n	{\n\n		if( debug() )\n		{\n			(\"queueSize of [\"+self.getName()+\"] --> \"+self.getTag(\"RtUnit\", \"queueSize\").asReal()).println();\n			(\"queueSize threshold --> \"+th_maxQL).println();\n		}\n		return true;\n	}\n	return false;\n}'),(103,129,'\noperation Component F_maxNetUtil(th_maxNetUtil : Real) : Boolean\n{\n\n	if( self.getNodesWithNetworkUsageGreaterThan(th_maxNetUtil).notEmpty() )\n		return true;\n	return false;\n}'),(104,141,'\noperation Classifier F_maxNetUtil(th_maxNetUtil : Real) : Boolean\n{\n\n	if( not self.getNodesWithNetworkUsageGreaterThan(th_maxNetUtil).isEmpty() )\n		return true;\n	return false;\n}'),(105,129,'\noperation Component F_minNetUtil(th_minNetUtil : Real) : Boolean\n{\n\n	if( not self.getNodesWithNetworkUsageLesserThan(th_minNetUtil).isEmpty() )\n		return true;\n	return false;\n}'),(106,129,'\noperation Component F_RT(th_SrtReq : Real) : Boolean\n{\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxResDemand());\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand());\n	var opG_Messages : Sequence(Message) = new Sequence(Message);\n	var messageList : List(Operation) = new List(Operation);\n	var operationMap : Map(UseCase, List(Message)) = new Map(UseCase, List(Message));\n\n	for(opG in opGreater)\n	{\n		var opG_Interactions = opG.getAllInteractions();\n\n		for(int in opG_Interactions)\n		{\n\n			for(mes in opG.getMessagesIn(int))\n			{\n\n				if( mes.getSendEvent().getOwner().getOwner().isTypeOf(CombinedFragment) )\n					opG_Messages.add(mes);\n			}\n		}\n	}\n\n	for(opL in opLesser)\n	{\n		var opL_Interactions = opL.getAllInteractions();\n\n		for(int in opL_Interactions)\n		{\n\n			for(mes in opL.getMessagesIn(int))\n			{\n				var opL_InteractionOperand = mes.getSendEvent().getOwner();\n\n				for(opG_Message in opG_Messages)\n				{\n					var opG_InteractionOperand = opG_Message.getSendEvent().getOwner();\n\n					if( opL_InteractionOperand.getOwner().isTypeOf(CombinedFragment) and opL_InteractionOperand.getOwner() == opG_InteractionOperand.getOwner() and opL_InteractionOperand <> opG_InteractionOperand )\n					{\n\n						if( opL_InteractionOperand.hasStereotype(\"GaStep\") and opG_InteractionOperand.hasStereotype(\"GaStep\") and (opL_InteractionOperand.getValue(opL_InteractionOperand.getStereotype(\"GaStep\"), \"prob\").asReal()+opG_InteractionOperand.getValue(opG_InteractionOperand.getStereotype(\"GaStep\"), \"prob\").asReal() == 1) )\n						{\n							messageList.add(opG_Message);\n							messageList.add(mes);\n						}\n					}\n				}\n			}\n\n			if( not messageList.isEmpty() )\n			{\n				operationMap.put(int.getUseCase(), messageList.clone());\n			}\n			messageList.clear();\n		}\n	}\n	var criticalUCs : List(UseCase) = new List(UseCase);\n\n	for(uc in operationMap.keySet())\n	{\n\n		if( uc.getValue(uc.getStereotype(\"GaScenario\"), \"respT\")->first().asReal() >= th_SrtReq )\n			criticalUCs.add(uc);\n	}\n\n	if( not criticalUCs.isEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(107,125,'\noperation Operation F_RT(th_SrtReq : Real) : Boolean\n{\n	return self.getUseCases() -> exists(iterator | iterator.hasStereotype(\"GaScenario\") and iterator.getValue(iterator.getStereotype(\"GaScenario\"), \"respT\")->first().asReal() > th_SrtReq);\n}');
/*!40000 ALTER TABLE `do_context` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `f`
--

DROP TABLE IF EXISTS `f`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `f` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `return_bool` tinyint(1) DEFAULT NULL,
  `isUnary` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=98 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `f`
--

LOCK TABLES `f` WRITE;
/*!40000 ALTER TABLE `f` DISABLE KEYS */;
INSERT INTO `f` VALUES (57,'F_probExec',1,NULL),(58,'F_probExec',1,NULL),(59,'F_probExec4EP',1,NULL),(60,'F_probExec',1,NULL),(61,'F_numClientConnects',1,NULL),(62,'F_numMsgsIn',1,NULL),(63,'F_numMsgsOut',1,NULL),(64,'F_numSupplierConnects',1,NULL),(65,'F_numRemMsgs',1,NULL),(66,'F_numRemMsgs',1,NULL),(67,'F_numRemInst',1,NULL),(68,'F_numRemInst',1,NULL),(69,'F_numExF',1,NULL),(70,'F_resDemandDiskGreaterOrEqualThan',1,NULL),(71,'F_resDemandCpuGreaterOrEqualThan',1,NULL),(72,'F_resDemandGreaterOrEqualThan',1,NULL),(73,'F_resDemandCpuGreaterOrEqualThan',1,NULL),(74,'F_resDemandDiskGreaterOrEqualThan',1,NULL),(75,'F_resDemandCpuLesserThan',1,NULL),(76,'F_resDemandDiskLesserThan',1,NULL),(77,'F_resDemandLesserThan',1,NULL),(78,'F_resDemand',1,NULL),(79,'F_resDemand',1,NULL),(80,'F_resDemand',1,NULL),(81,'F_T',1,NULL),(82,'F_T',1,NULL),(83,'F_T',0,NULL),(84,'F_T',1,NULL),(85,'F_maxHwUtil',1,NULL),(86,'F_maxHwUtil',1,NULL),(87,'F_maxHwUtil',1,NULL),(88,'F_maxHwUtil',1,NULL),(89,'F_maxCpuUtil',1,NULL),(90,'F_maxDiskUtil',1,NULL),(91,'F_maxHwUtil',1,NULL),(92,'F_maxQL',1,NULL),(93,'F_maxNetUtil',1,NULL),(94,'F_maxNetUtil',1,NULL),(95,'F_minNetUtil',1,NULL),(96,'F_RT',1,NULL),(97,'F_RT',1,NULL);
/*!40000 ALTER TABLE `f` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `f_context`
--

DROP TABLE IF EXISTS `f_context`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `f_context` (
  `f_id` int(11) NOT NULL,
  `context_id` int(11) NOT NULL,
  `method` varchar(5000) DEFAULT NULL,
  PRIMARY KEY (`f_id`,`context_id`),
  KEY `context_id` (`context_id`),
  CONSTRAINT `f_context_ibfk_1` FOREIGN KEY (`f_id`) REFERENCES `f` (`id`),
  CONSTRAINT `f_context_ibfk_2` FOREIGN KEY (`context_id`) REFERENCES `context` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `f_context`
--

LOCK TABLES `f_context` WRITE;
/*!40000 ALTER TABLE `f_context` DISABLE KEYS */;
INSERT INTO `f_context` VALUES (57,123,'\noperation Message F_probExec() : Boolean\n{\n\n	if( self.getMessageKind().asString() <> \"found\" )\n	{\n		var intOperand = self.getSendEvent().getOwner();\n\n		if( not self.hasStereotype(\"GaStep\") and not self.hasStereotype(\"GaAcqStep\") )\n			return false;\n\n		if( intOperand.isUndefined() or (intOperand.isDefined() and not intOperand.isTypeOf(InteractionOperand)) )\n		{\n			return true;\n		}\n		else\n		{\n\n			if( intOperand.hasStereotype(\"GaStep\") )\n			{\n\n				if( intOperand.getValue(intOperand.getStereotype(\"GaStep\"), \"prob\").isDefined() and intOperand.getValue().asReal == 1.0 )\n				{\n					return true;\n				}\n			}\n		}\n	}\n	return false;\n}'),(58,125,'\noperation Operation F_probExec() : Boolean\n{\n	var listOfMes = self.getAllOwnMessages();\n	var listOfIntOperands = self.getOwnerInteractionOperands();\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n\n	if( listOfMes.isEmpty() )\n	{\n		return false;\n	}\n\n	if( listOfIntOperands.isEmpty() )\n	{\n		return true;\n	}\n\n	for(int in listOfIntOperands)\n	{\n\n		if( int.hasStereotype(\"GaStep\") and (int.getValue(int.getStereotype(\"GaStep\"), \"prob\").asReal() == 1) )\n		{\n			return true;\n		}\n	}\n	return false;\n}'),(59,125,'\noperation Operation F_probExec4EP() : Boolean\n{\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n	var listOfMes = self.getAllOwnMessages();\n\n	if( listOfMes.isEmpty() )\n		return false;\n\n	if( self.retrieveOperation().isDefined() )\n	{\n		return true;\n	}\n	else\n	{\n		return false;\n	}\n}'),(60,129,'\noperation Component F_probExec() : Boolean\n{\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxResDemand());\n\n	if( opGreater.isUndefined() or opGreater.isEmpty() )\n	{\n		return false;\n	}\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand());\n\n	for(opG in opGreater)\n	{\n		var opGInteractionOperands = opG.getOwnerInteractionOperands();\n\n		for(opL in opLesser)\n		{\n\n			for(opLInteractionOperand in opL.getOwnerInteractionOperands())\n			{\n\n				for(opGInteractionOperand in opGInteractionOperands)\n				{\n					var opGInteractionOperandStereotype = opGInteractionOperand.getStereotype(\"GaStep\");\n					var opLInteractionOperandStereotype = opLInteractionOperand.getStereotype(\"GaStep\");\n\n					if( opGInteractionOperandStereotype.isDefined() and opLInteractionOperandStereotype.isDefined() )\n					{\n\n						if( (opGInteractionOperand.getValue(opGInteractionOperandStereotype, \"prob\").asReal()+opLInteractionOperand.getValue(opLInteractionOperandStereotype, \"prob\").asReal()) == 1 )\n							return true;\n					}\n				}\n			}\n		}\n	}\n	return false;\n}'),(61,129,'\noperation Component F_numClientConnects(th_numClientConnects : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"number of Client Connects of [\"+self.getName()+\"] --> \"+self.getRequireds().size()).println();\n	}\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n		return false;\n\n	if( self.getRequireds().size().asReal() >= th_numClientConnects )\n	{\n		return true;\n	}\n	return false;\n}'),(62,129,'\noperation Component F_numMsgsIn(th_numReceivedMsgs : List(Real)) : Boolean\n{\n\n	if( debug() )\n	{\n		\"######### DEBUG ##########\".println();\n		self.println();\n		(\"getCriticalLifeline4BlobContainerAP --> \"+self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs)).println();\n		\"######### DEBUG ##########\".println();\n	}\n\n	if( self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs).isDefined() and not self.getCriticalLifeline4BlobContainerAP(th_numReceivedMsgs).isEmpty() )\n		return true;\n	return false;\n}'),(63,129,'\noperation Component F_numMsgsOut(th_numSentMsgs : List(Real)) : Boolean\n{\n\n	if( debug() )\n	{\n		\"######### DEBUG ##########\".println();\n		self.println();\n		(\"getCriticalLifeline4BlobControllerAP --> \"+self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).size()).println();\n		\"######### DEBUG ##########\".println();\n	}\n\n	if( self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).isDefined() and not self.getCriticalLifeline4BlobControllerAP(th_numSentMsgs).isEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(64,129,'\noperation Component F_numSupplierConnects(th_numSupplierConnects : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"number of Supplier Connects of [\"+self.getName()+\"] --> \"+self.getProvideds().size()).println();\n	}\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n	{\n		return false;\n	}\n\n	if( self.getProvideds().size().asReal() >= th_numSupplierConnects )\n	{\n		return true;\n	}\n	return false;\n}'),(65,129,'\noperation Component F_numRemMsgs(th_maxRemMsgs : Real) : Boolean\n{\n\n	if( self.countRemoteMessages(th_maxRemMsgs) )\n	{\n		return true;\n	}\n	return false;\n}'),(66,141,'\noperation Classifier F_numRemMsgs(th_maxRemMsgs : Integer) : Boolean\n{\n\n	if( self.countRemoteMessages(th_maxRemMsgs) )\n		return true;\n	return false;\n}'),(67,129,'\noperation Component F_numRemInst(th_maxRemInst : Integer) : Boolean\n{\n\n	if( self.countRemoteInstances(th_maxRemInst) )\n		return true;\n	return false;\n}'),(68,141,'\noperation Classifier F_numRemInst(th_maxRemInst : Integer) : Boolean\n{\n\n	if( self.countRemoteInstances(th_maxRemInst) )\n		return true;\n	return false;\n}'),(69,129,'\noperation Component F_numExF(th_maxExF : Integer) : Boolean\n{\n\n	if( self.hasStereotype(\"PaRunTInstance\") and not self.getUsedFormat().isEmpty() )\n	{\n\n		for(int in self.getUsedFormat().keySet())\n		{\n\n			if( self.getUsedFormat().get(int).keySet().size() >= th_maxExF )\n			{\n				return true;\n			}\n		}\n	}\n	return false;\n}'),(70,149,'\noperation Node F_resDemandDiskGreaterOrEqualThan(th_maxResDemandDisk : Real) : Boolean\n{\n	var turnback : Boolean = false;\n	var criticOperation = self.getDiskCriticOperation();\n\n	if( criticOperation.isUndefined() or criticOperation.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Context: Node, Method: F_resDemandDiskGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n\n	if( not criticOperation.hasStereotype(\"GaStep\") )\n	{\n		(\"the opearion [\"+self.getName()+\"] is not correctly stereotyped\").println();\n		showError(\"Method: F_resDemandDiskGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n	var servCount = criticOperation.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	if( servCount->second().asReal() >= th_maxResDemandDisk )\n	{\n		return true;\n	}\n	return false;\n}'),(71,149,'\noperation Node F_resDemandCpuGreaterOrEqualThan(th_maxResDemandCpu : Real) : Boolean\n{\n	var turnback : Boolean = false;\n	var criticOperation = self.getCpuCriticOperation();\n\n	if( debug() )\n	{\n		(\"criticOperation of [\"+self.getName()+\"]\").println();\n		(\"criticOperation --> \"+criticOperation).println();\n	}\n\n	if( criticOperation.isUndefined() or criticOperation.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Context: Node, Method: F_resDemandCpuGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n\n	if( not criticOperation.hasStereotype(\"GaStep\") )\n	{\n		showError(\"the opearion [\"+self.getName()+\"] is not correctly stereotyped\");\n		showError(\"Method: F_resDemandCpuGreaterOrEqualThan() in metrics_functions.eol\");\n		return false;\n	}\n	var servCount = criticOperation.getTag(\"GaStep\", \"servCount\");\n\n	if( debug() )\n	{\n		(\"servCount of [\"+self.getName()+\"] --> \"+servCount).println();\n		(\"th_maxResDemandCpu --> \"+th_maxResDemandCpu).println();\n	}\n\n	if( servCount->first().asReal() >= th_maxResDemandCpu )\n	{\n		return true;\n	}\n	return turnback;\n}'),(72,125,'\noperation Operation F_resDemandGreaterOrEqualThan(th_maxResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var appliedStereotypes = self.getAppliedStereotypes();\n	var gaStep = self.getStereotype(\"GaStep\");\n	var servCount = self.getValue(gaStep, \"servCount\");\n	var i : Integer = 0;\n\n	for(demand in servCount)\n	{\n\n		if( demand.asReal() >= th_maxResDemand.at(i).asReal() )\n		{\n			turnback = true;\n			break;\n		}\n		i = i+1;\n	}\n	return turnback;\n}'),(73,125,'\noperation Operation F_resDemandCpuGreaterOrEqualThan(th_maxCpuResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->first().asReal() >= th_maxCpuResDemand )\n	{\n\n		if( debug() )\n		{\n			(\"servCount of [\"+self.getName()+\"] -->\"+servCount).println();\n			(\"th_maxCpuResDemand -->\"+th_maxCpuResDemand).println();\n		}\n		return true;\n	}\n	return false;\n}'),(74,125,'\noperation Operation F_resDemandDiskGreaterOrEqualThan(th_maxDiskResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		showError(\"Method: F_resDemandGreaterOrEqualThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->second().asReal() >= th_maxDiskResDemand )\n	{\n		return true;\n	}\n	return false;\n}'),(75,125,'\noperation Operation F_resDemandCpuLesserThan(th_minResDemandCpu : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the operation is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->first().asReal() < th_minResDemandCpu )\n	{\n		return true;\n	}\n	return false;\n}'),(76,125,'\noperation Operation F_resDemandDiskLesserThan(th_minResDemandDisk : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the operation is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n\n	if( servCount->second().asReal() < th_minResDemandDisk )\n	{\n		return true;\n	}\n	return false;\n}'),(77,125,'\noperation Operation F_resDemandLesserThan(th_minResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.isUndefined() or self.getAppliedStereotypes().isUndefined() )\n	{\n		(\"the element is undefined\").println();\n		showError(\"Method: F_resDemandLesserThan() in metrics_functions.eol\");\n	}\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	for(demand in servCount)\n	{\n\n		if( demand.asReal() < th_minResDemand.at(i) )\n		{\n			turnback = true;\n			break;\n		}\n		i = i+1;\n	}\n	return turnback;\n}'),(78,125,'\noperation Operation F_resDemand(th_maxResDemand : List(Real)) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( not self.hasStereotype(\"GaStep\") )\n		return false;\n	var servCount = self.getTag(\"GaStep\", \"servCount\");\n	var i : Integer = 0;\n\n	if( servCount.isDefined() and servCount.size() == 0 )\n	{\n		turnback = false;\n	}\n	else\n	{\n\n		for(demand in servCount)\n		{\n\n			if( demand.asReal() >= th_maxResDemand.at(i) )\n			{\n				turnback = true;\n				break;\n			}\n			i = i+1;\n		}\n	}\n	return turnback;\n}'),(79,123,'\noperation Message F_resDemand(th_maxResDemand : Real) : Boolean\n{\n	var turnback : Boolean = false;\n\n	if( self.hasStereotype(\"GaStep\") )\n	{\n		var gaStep = self.getStereotype(\"GaStep\");\n		var servCount = self.getValue(gaStep, \"servCount\");\n\n		for(demand in servCount)\n		{\n\n			if( demand.asReal() < th_maxResDemand.at(i) )\n			{\n				turnback = false;\n				break;\n			}\n			i = i+1;\n		}\n	}\n	return turnback;\n}'),(80,129,'\noperation Component F_resDemand(th_maxOpResDemand : List(Real), th_minResDemand : List(Real)) : Boolean\n{\n\n	if( not self.hasStereotype(\"PaRunTInstance\") )\n		return false;\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxOpResDemand);\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand);\n\n	if( opGreater.notEmpty() and opLesser.notEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(81,125,'\noperation Operation F_T(th_SthReq : Real) : Boolean\n{\n	var listOfUseCases : List(UseCase) = self.getUseCases();\n	var listOfUseCaseWithThroughputLessThanThreshold : List(UseCase) = new List(UseCase);\n\n	if( listOfUseCases.isEmpty() )\n	{\n		return false;\n	}\n\n	for(useCase in listOfUseCases)\n	{\n\n		if( useCase.hasStereotype(\"GaScenario\") )\n		{\n			var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n			if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n			{\n				listOfUseCaseWithThroughputLessThanThreshold.add(useCase);\n			}\n		}\n	}\n	return listOfUseCaseWithThroughputLessThanThreshold.notEmpty();\n}'),(82,123,'\noperation Message F_T() : Boolean\n{\n	var th_SthReq = 0.9;\n	var useCase : UseCase = self.getUseCase();\n\n	if( useCase.hasStereotype(\"GaScenario\") )\n	{\n		var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n		if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n		{\n			return true;\n		}\n	}\n	return false;\n}'),(83,123,'\noperation Message F_T() : Real\n{\n	var th_SthReq = 0.9;\n	var useCase : UseCase = self.getUseCase();\n\n	if( useCase.hasStereotype(\"GaScenario\") )\n	{\n		var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n		if( throughput.isDefined() )\n		{\n			return throughput.asReal();\n		}\n	}\n	return 0;\n}'),(84,125,'\noperation Operation F_T() : Boolean\n{\n	var th_SthReq = 0.9;\n	var listOfUseCases : List(UseCase) = self.getUseCases();\n	var listOfUseCaseWithThroughputLessThanThreshold : List(UseCase) = new List(UseCase);\n\n	for(useCase in listOfUseCases)\n	{\n\n		if( useCase.hasStereotype(\"GaScenario\") )\n		{\n			var throughput = useCase.getValue(useCase.getStereotype(\"GaScenario\"), \"throughput\")->first();\n\n			if( throughput.isDefined() and throughput.asReal() < th_SthReq )\n			{\n				listOfUseCaseWithThroughputLessThanThreshold.add(useCase);\n			}\n		}\n	}\n	return listOfUseCaseWithThroughputLessThanThreshold.isEmpty();\n}'),(85,123,'\noperation Message F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	return self.getSignature().F_maxHwUtil(th_maxHwUtil);\n}'),(86,125,'\noperation Operation F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	var listOfProcessNode : List(Node) = new List(Node);\n	listOfProcessNode = self.getProcessNodes();\n\n	if( listOfProcessNode.isEmpty() )\n	{\n		return false;\n	}\n	var listOfProcessNodeWithUtilizationGreater : List(Node) = new List(Node);\n\n	for(node in listOfProcessNode)\n	{\n\n		if( node.hasStereotype(\"GaExecHost\") )\n		{\n			var utilization = node.getValue(node.getStereotype(\"GaExecHost\"), \"utilization\")->first();\n\n			if( utilization.isDefined() and utilization.asReal() >= th_maxHwUtil )\n			{\n				listOfProcessNodeWithUtilizationGreater.add(node);\n			}\n		}\n	}\n	return listOfProcessNodeWithUtilizationGreater.notEmpty();\n}'),(87,125,'\noperation Operation F_maxHwUtil() : Boolean\n{\n	var th_maxHwUtil : Real = 0.85;\n	var listOfProcessNode : List(Node) = new List(Node);\n	listOfProcessNode = self.getProcessNodes();\n	var listOfProcessNodeWithUtilizationGreater : List(Node) = new List(Node);\n\n	for(node in listOfProcessNode)\n	{\n\n		if( node.hasStereotype(\"GaExecHost\") )\n		{\n			var utilization = node.getValue(node.getStereotype(\"GaExecHost\"), \"utilization\")->first();\n\n			if( utilization.isDefined() and utilization.asReal() >= th_maxHwUtil )\n			{\n				listOfProcessNodeWithUtilizationGreater.add(node);\n			}\n		}\n	}\n	return listOfProcessNodeWithUtilizationGreater.isEmpty();\n}'),(88,149,'\noperation Node F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n	var utilization = self.getUtilization();\n\n	if( utilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( utilization.asReal() >= th_maxHwUtil )\n		{\n\n			if( self.getNeighboursWithLowUtilization().isUndefined() or self.getNeighboursWithLowUtilization().isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(89,149,'\noperation Node F_maxCpuUtil(th_maxCpuUtil : Real) : Boolean\n{\n	var maxCpuUtilization = self.getMaxCpuUtilization();\n\n	if( maxCpuUtilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( maxCpuUtilization.asReal() >= th_maxCpuUtil )\n		{\n\n			if( debug() )\n			{\n				(\"self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined() --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined()).println();\n				(\"self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty() --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty()).println();\n				(\"self.getNeighboursWithLowCpuUtilization --> \"+self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third())).println();\n			}\n\n			if( self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isUndefined() and self.getNeighboursWithLowCpuUtilization(th_maxHwUtil()->third()).isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(90,149,'\noperation Node F_maxDiskUtil(th_maxDiskUtil : Real) : Boolean\n{\n	var maxDiskUtilization = self.getMaxDiskUtilization();\n\n	if( maxDiskUtilization.isUndefined() )\n	{\n		return false;\n	}\n	else\n	{\n\n		if( maxDiskUtilization.asReal() >= th_maxDiskUtil )\n		{\n\n			if( self.getNeighboursWithLowDiskUtilization(th_maxHwUtil()->at(4)).isUndefined() or self.getNeighboursWithLowDiskUtilization(th_maxHwUtil()->at(4)).isEmpty() )\n			{\n				return false;\n			}\n			return true;\n		}\n	}\n	return false;\n}'),(91,129,'\noperation Component F_maxHwUtil(th_maxHwUtil : Real) : Boolean\n{\n\n	if( debug() )\n	{\n		(\"getNodesWithUtilizationGreaterThan(th_maxHwUtil) [\"+self.getName()+\"] --> \"+self.getNodesWithUtilizationGreaterThan(th_maxHwUtil).size()).println();\n	}\n\n	if( self.getNodesWithUtilizationGreaterThan(th_maxHwUtil).notEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(92,149,'\noperation Node F_maxQL(th_maxQL : Real) : Boolean\n{\n\n	if( self.hasStereotype(\"RtUnit\") and self.getTag(\"RtUnit\", \"queueSize\").isDefined() and self.getTag(\"RtUnit\", \"queueSize\").asReal() > th_maxQL )\n	{\n\n		if( debug() )\n		{\n			(\"queueSize of [\"+self.getName()+\"] --> \"+self.getTag(\"RtUnit\", \"queueSize\").asReal()).println();\n			(\"queueSize threshold --> \"+th_maxQL).println();\n		}\n		return true;\n	}\n	return false;\n}'),(93,129,'\noperation Component F_maxNetUtil(th_maxNetUtil : Real) : Boolean\n{\n\n	if( self.getNodesWithNetworkUsageGreaterThan(th_maxNetUtil).notEmpty() )\n		return true;\n	return false;\n}'),(94,141,'\noperation Classifier F_maxNetUtil(th_maxNetUtil : Real) : Boolean\n{\n\n	if( not self.getNodesWithNetworkUsageGreaterThan(th_maxNetUtil).isEmpty() )\n		return true;\n	return false;\n}'),(95,129,'\noperation Component F_minNetUtil(th_minNetUtil : Real) : Boolean\n{\n\n	if( not self.getNodesWithNetworkUsageLesserThan(th_minNetUtil).isEmpty() )\n		return true;\n	return false;\n}'),(96,129,'\noperation Component F_RT(th_SrtReq : Real) : Boolean\n{\n	var opGreater = self.getOperationsWithResDemandGreaterOrEqual(th_maxResDemand());\n	var opLesser = self.getOperationsWithResDemandLesserThan(th_minResDemand());\n	var opG_Messages : Sequence(Message) = new Sequence(Message);\n	var messageList : List(Operation) = new List(Operation);\n	var operationMap : Map(UseCase, List(Message)) = new Map(UseCase, List(Message));\n\n	for(opG in opGreater)\n	{\n		var opG_Interactions = opG.getAllInteractions();\n\n		for(int in opG_Interactions)\n		{\n\n			for(mes in opG.getMessagesIn(int))\n			{\n\n				if( mes.getSendEvent().getOwner().getOwner().isTypeOf(CombinedFragment) )\n					opG_Messages.add(mes);\n			}\n		}\n	}\n\n	for(opL in opLesser)\n	{\n		var opL_Interactions = opL.getAllInteractions();\n\n		for(int in opL_Interactions)\n		{\n\n			for(mes in opL.getMessagesIn(int))\n			{\n				var opL_InteractionOperand = mes.getSendEvent().getOwner();\n\n				for(opG_Message in opG_Messages)\n				{\n					var opG_InteractionOperand = opG_Message.getSendEvent().getOwner();\n\n					if( opL_InteractionOperand.getOwner().isTypeOf(CombinedFragment) and opL_InteractionOperand.getOwner() == opG_InteractionOperand.getOwner() and opL_InteractionOperand <> opG_InteractionOperand )\n					{\n\n						if( opL_InteractionOperand.hasStereotype(\"GaStep\") and opG_InteractionOperand.hasStereotype(\"GaStep\") and (opL_InteractionOperand.getValue(opL_InteractionOperand.getStereotype(\"GaStep\"), \"prob\").asReal()+opG_InteractionOperand.getValue(opG_InteractionOperand.getStereotype(\"GaStep\"), \"prob\").asReal() == 1) )\n						{\n							messageList.add(opG_Message);\n							messageList.add(mes);\n						}\n					}\n				}\n			}\n\n			if( not messageList.isEmpty() )\n			{\n				operationMap.put(int.getUseCase(), messageList.clone());\n			}\n			messageList.clear();\n		}\n	}\n	var criticalUCs : List(UseCase) = new List(UseCase);\n\n	for(uc in operationMap.keySet())\n	{\n\n		if( uc.getValue(uc.getStereotype(\"GaScenario\"), \"respT\")->first().asReal() >= th_SrtReq )\n			criticalUCs.add(uc);\n	}\n\n	if( not criticalUCs.isEmpty() )\n	{\n		return true;\n	}\n	return false;\n}'),(97,125,'\noperation Operation F_RT(th_SrtReq : Real) : Boolean\n{\n	return self.getUseCases() -> exists(iterator | iterator.hasStereotype(\"GaScenario\") and iterator.getValue(iterator.getStereotype(\"GaScenario\"), \"respT\")->first().asReal() > th_SrtReq);\n}');
/*!40000 ALTER TABLE `f_context` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `f_f`
--

DROP TABLE IF EXISTS `f_f`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `f_f` (
  `f_id` int(11) NOT NULL,
  `f_id_to_compare` int(11) NOT NULL,
  PRIMARY KEY (`f_id`,`f_id_to_compare`),
  KEY `f_id_to_compare` (`f_id_to_compare`),
  CONSTRAINT `f_f_ibfk_1` FOREIGN KEY (`f_id`) REFERENCES `f` (`id`),
  CONSTRAINT `f_f_ibfk_2` FOREIGN KEY (`f_id_to_compare`) REFERENCES `f` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `f_f`
--

LOCK TABLES `f_f` WRITE;
/*!40000 ALTER TABLE `f_f` DISABLE KEYS */;
/*!40000 ALTER TABLE `f_f` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `f_thresholds`
--

DROP TABLE IF EXISTS `f_thresholds`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `f_thresholds` (
  `f_id` int(11) NOT NULL,
  `thresholds_id` int(11) NOT NULL,
  PRIMARY KEY (`f_id`,`thresholds_id`),
  KEY `thresholds_id` (`thresholds_id`),
  CONSTRAINT `f_thresholds_ibfk_1` FOREIGN KEY (`f_id`) REFERENCES `f` (`id`),
  CONSTRAINT `f_thresholds_ibfk_2` FOREIGN KEY (`thresholds_id`) REFERENCES `thresholds` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `f_thresholds`
--

LOCK TABLES `f_thresholds` WRITE;
/*!40000 ALTER TABLE `f_thresholds` DISABLE KEYS */;
/*!40000 ALTER TABLE `f_thresholds` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `thresholds`
--

DROP TABLE IF EXISTS `thresholds`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `thresholds` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `method` varchar(5000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `thresholds`
--

LOCK TABLES `thresholds` WRITE;
/*!40000 ALTER TABLE `thresholds` DISABLE KEYS */;
/*!40000 ALTER TABLE `thresholds` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-02-05 19:48:24
